#!/bin/bash
# !!! generated by puppet !!!

# configsvr - Startup script for mongod configuration server

# chkconfig: 35 85 15
# description: Mongo is a scalable, document-oriented database.
# processname: mongod
# config: <%= @config %>
# pidfile: <%= @settings['processManagement']['pidFilePath'] %>

. /etc/rc.d/init.d/functions

# things from mongod.conf get there by mongod reading it


# NOTE: if you change any OPTIONS here, you get what you pay for:
# this script assumes all options are in the config file.
CONFIGFILE="<%= @config %>"
OPTIONS=" -f $CONFIGFILE"

# FIXME: 1.9.x has a --shutdown flag that parses the config file and
# shuts down the correct running pid, but that's unavailable in 1.8
# for now.  This can go away when this script stops supporting 1.8.
PIDFILE="<%= @settings['processManagement']['pidFilePath'] %>"
mongod=${MONGOD-/usr/bin/mongod}

MONGO_USER=<%= @user %>
MONGO_GROUP=<%= @group %>

# Handle NUMA access to CPUs (SERVER-3574)
# This verifies the existence of numactl as well as testing that the command works
NUMACTL_ARGS="--interleave=all"
if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
then
    NUMACTL="numactl $NUMACTL_ARGS"
else
    NUMACTL=""
fi

start()
{
  # Recommended ulimit values for mongod or mongos
  # See http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings
  #
  ulimit -f unlimited
  ulimit -t unlimited
  ulimit -v unlimited
  ulimit -n 64000
  ulimit -m unlimited
  ulimit -u 32000

  test -f /sys/kernel/mm/transparent_hugepage/khugepaged/defrag \
  && echo 0 > /sys/kernel/mm/transparent_hugepage/khugepaged/defrag
  test -f /sys/kernel/mm/transparent_hugepage/defrag \
  && echo never > /sys/kernel/mm/transparent_hugepage/defrag
  test -f /sys/kernel/mm/transparent_hugepage/enabled \
  && echo never > /sys/kernel/mm/transparent_hugepage/enabled

  echo -n $"Starting mongod configsvr: "
  daemon --user "$MONGO_USER" "$NUMACTL $mongod $OPTIONS >/dev/null 2>&1"
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch /var/lock/subsys/configsvr
}

stop()
{
  echo -n $"Stopping mongod configsvr: "
  killproc -p "$PIDFILE" -d 300 /usr/bin/mongod
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/configsvr
}

restart () {
        stop
        start
}


RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f /var/lock/subsys/configsvr ] && restart || :
    ;;
  status)
    status -p $PIDFILE
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL

